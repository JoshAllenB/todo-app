(()=>{"use strict";function e(){const e=document.createElement("div");e.id="todoModal",e.classList.add("modal");const o=document.createElement("div");o.classList.add("modal-content");const d=document.createElement("span");d.classList.add("close"),d.innerHTML="&times;";const c=t("Task Name:","todoName"),l=n("text","todoName",!0),i=t("Date:","todoDate"),a=n("date","todoDate",!0),s=document.createElement("button");return s.id="submitTodo",s.textContent="Submit",o.appendChild(d),o.appendChild(c),o.appendChild(l),o.appendChild(i),o.appendChild(a),o.appendChild(s),e.appendChild(o),e}function t(e,t){const n=document.createElement("label");return n.setAttribute("for",t),n.textContent=e,n}function n(e,t,n){const o=document.createElement("input");return o.type=e,o.id=t,o.required=n,o}function o(e){const t=document.querySelector(".close");t&&t.addEventListener("click",(function(){e.style.display="none",console.log("Hotdog Clicked"),e.remove()}))}function d(){const e=document.getElementById("submitTodo"),t=document.getElementById("todoModal"),n=document.querySelector(".todoList");let o=document.querySelector(".todo-item-wrapper");o||(o=document.createElement("div"),o.classList.add("todo-item-wrapper")),e&&t&&n&&o&&e.addEventListener("click",(function(){const e=document.getElementById("todoName").value,d=document.getElementById("todoDate").value,c=document.createElement("div");c.classList.add("todo-item");const l=document.createElement("span");l.classList.add("checkmark");const i=document.createElement("input");i.type="checkbox";const a=document.createElement("h3");a.textContent=e;const s=document.createElement("p");s.textContent=d,l.appendChild(i),c.appendChild(l),c.appendChild(a),c.appendChild(s),o.appendChild(c),new Date(d);const r=Array.from(o.children).sort(((e,t)=>new Date(e.querySelector("p").textContent)-new Date(t.querySelector("p").textContent)));o.innerHTML="",r.forEach((e=>{o.appendChild(e)})),o.parentElement||n.appendChild(o),t.style.display="none",t.remove(),i.addEventListener("change",(function(){i.checked&&setTimeout((()=>{c.remove()}),200)}))}))}window.addEventListener("load",(function(){!function(){console.log("Entering projectHandler");const t=document.getElementById("add-project");if(t){const n=document.querySelector(".project"),o=function(){if(console.log("Entering clickHandler"),n&&n.querySelector(".project-input-container"))return void console.log("Input field already created. Exiting clickHandler.");const t=document.createElement("input");t.type="text",t.placeholder="Enter project name";const o=document.createElement("button");o.textContent="Submit",o.classList.add("submit-btn");const d=document.createElement("button");d.textContent="Cancel",d.classList.add("cancel-btn");const c=document.createElement("div");c.classList.add("project-input-container"),c.appendChild(t),c.appendChild(o),c.appendChild(d),o.addEventListener("click",(function(){console.log("Submit button clicked");const o=t.value.trim();if(o){console.log("Project Name:",o);const t=document.createElement("div");t.classList.add("project-item");const d=document.createElement("button");d.textContent=o,d.classList.add("projNameBtn");const l=document.createElement("button");l.textContent="x",l.classList.add("delete-btn"),l.addEventListener("click",(function(){t.remove();const e=document.querySelector(`.project-todo-list[data-project="${o}"]`);e&&e.remove()})),t.appendChild(d),t.appendChild(l),n.appendChild(t),c.remove();let i=document.createElement("div");i.classList.add("project-todo-list","hidden"),i.dataset.project=o;const a=document.createElement("button");a.textContent=`Add Todo for ${o}`,a.classList.add("add-todo-btn"),a.addEventListener("click",(function(){const t=e();document.getElementById("mainContent").appendChild(t),function(e){console.log("Entering closeModal");const t=document.querySelector(".close");t&&t.addEventListener("click",(function(){e.style.display="none",console.log("Close button clicked"),e.remove()})),console.log("Exiting closeModal")}(t),function(e,t){console.log("Entering submitTodoForProject");const n=document.querySelector(`.project-todo-list[data-project="${e}"]`);let o=document.querySelector(`.project-wrapper[data-project="${e}"]`);if(!o){o=document.createElement("div"),o.classList.add("project-wrapper"),o.dataset.project=e;const t=document.querySelector(".todoList");t&&t.appendChild(o),n.appendChild(o)}if(t&&o){n.appendChild(t);const e=document.getElementById("submitTodo"),d=function(){console.log("Submit Todo button clicked");const n=document.getElementById("todoName").value,c=document.getElementById("todoDate").value,l=document.createElement("div");l.classList.add("todo-item");const i=document.createElement("span");i.classList.add("checkmark");const a=document.createElement("input");a.type="checkbox";const s=document.createElement("h3");s.textContent=n;const r=document.createElement("p");r.textContent=c,i.appendChild(a),l.appendChild(i),l.appendChild(s),l.appendChild(r),o.appendChild(l);const u=Array.from(o.children).sort(((e,t)=>(e.querySelector("p")?new Date(e.querySelector("p").textContent):null)-(t.querySelector("p")?new Date(t.querySelector("p").textContent):null)));o.innerHTML="",u.forEach((e=>{o.appendChild(e)})),t.style.display="none",t.remove(),e.removeEventListener("click",d)};e.addEventListener("click",d),o.addEventListener("change",(function(e){const t=e.target;"INPUT"===t.tagName&&"checkbox"===t.type&&setTimeout((()=>{const e=t.closest(".todo-item");e&&e.remove()}),200)}))}console.log("Exiting submitTodoForProject")}(o,t)})),i.appendChild(a);const s=document.querySelector(".todoList");s&&s.appendChild(i),d.addEventListener("click",(function(){document.querySelectorAll(".project-todo-list").forEach((e=>{e.classList.add("hidden")})),i.classList.remove("hidden")}))}else alert("Please enter a project name.")})),d.addEventListener("click",(function(){c.remove()})),n&&n.appendChild(c),console.log("Exiting clickHandler")};t.addEventListener("click",o)}console.log("Exiting projectHandler")}()})),function(){!function(){const e=document.createElement("header"),t=document.createElement("h1");t.textContent="To-Do List",e.appendChild(t),document.body.appendChild(e)}();const t=function(){const e=document.createElement("div");return e.classList.add("content"),e.setAttribute("id","mainContent"),e}(),n=function(){const e=document.createElement("div");e.classList.add("todoList");const t=document.createElement("button");return t.classList.add("todoBtn"),t.textContent="Add To-Do List",e.appendChild(t),e}();!function(e){const t=document.createElement("div");function n(e,t){const n=document.createElement("button");return n.textContent=e,n.id=t,n}t.classList.add("sideMenu");const o=document.createElement("div");o.classList.add("home"),o.innerHTML="<h1>Home</h1>";const d=n("Inbox","inbox");o.appendChild(d),o.appendChild(n("Today","today")),o.appendChild(n("This Week","this-week"));const c=document.createElement("div");c.classList.add("project"),c.innerHTML="<h1>Project</h1>";const l=n("+ Add Project","add-project");c.appendChild(l),t.appendChild(o),t.appendChild(c),e.appendChild(t),document.body.appendChild(e)}(t),t.appendChild(n),function(){const e=document.querySelector(".sideMenu");e&&e.querySelectorAll("button").forEach((t=>{t.addEventListener("click",(()=>{e.querySelectorAll("button").forEach((e=>e.classList.remove("active"))),t.classList.add("active");const n=document.querySelector(".todoBtn"),o=document.getElementById("todoModal");"inbox"!==t.id&&(n.style.display="none",o&&(o.style.display="none"))}))}))}(),function(){const t=document.querySelector(".todoBtn"),n=document.getElementById("inbox"),c=document.getElementById("mainContent");t&&n&&(t.style.display=n.classList.contains("active")?"block":"none",n.addEventListener("click",(function(){t.style.display="block"})),t.addEventListener("click",(function(){const t=e();c.appendChild(t),o(t),d()})))}(),o(),d(),function(){const e=document.createElement("footer"),t=document.createElement("div");t.classList.add("link");const n=function(e){const t=document.createElement("h1");return t.innerHTML='Copyright <i class="fa-regular fa-copyright"></i> JoshAllen',t}();t.appendChild(n),e.appendChild(t),document.body.appendChild(e)}()}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,